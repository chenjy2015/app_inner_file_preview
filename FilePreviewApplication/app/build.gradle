plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30

    sourceSets {
        main {
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    def APP_NAME = "FilePreview"
    def APP_VERSION = "0.0.1"

    defaultConfig {
        applicationId "com.filepreview.application"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode getVersionCode(APP_VERSION)
        versionName getVersionName(APP_VERSION)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
    }

    signingConfigs {
        debug {
            storeFile file('./cmdc_key.jks')
            storePassword 'cmdc@123456'
            keyAlias 'cmdc_key'
            keyPassword 'cmdc@123456'
        }

        release {
            storeFile file('./cmdc_key.jks')
            storePassword 'cmdc@123456'
            keyAlias 'cmdc_key'
            keyPassword 'cmdc@123456'
        }
    }

    buildTypes {
        debug {
            // signingConfig signingConfigs.zte
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name.equals('debug')) {
                    fileName = APP_NAME + "_" + getVersionName(APP_VERSION) + "_debug" + ".apk"
                } else if (variant.buildType.name.equals('release')) {
                    fileName = APP_NAME + "_" + getVersionName(APP_VERSION) + "_release" + ".apk"
                }
                outputFileName = fileName
            }
        }
    }

    dataBinding {
        enabled = true
    }

    //-----------office-------------
    packagingOptions {
        exclude 'com/itextpdf/text/pdf/fonts/cmap_info.txt'
        exclude 'MATE-INF/LICENSE'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'org.androidannotations:androidannotations-api:4.8.0'
    annotationProcessor "org.androidannotations:androidannotations:4.8.0"

    //android-pdf-viewer
    implementation project(':android-pdf-viewers')
    //glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'
    //banner
    implementation 'io.github.youth5201314:banner:2.2.2'
    //photo view
    implementation 'com.bm.photoview:library:1.4.1'

    //-------------office-------------------
    //this jar all download in libs filedir
//    implementation 'org.apache.poi:poi:3.17'
//    // Excel XLS
//    implementation 'org.apache.poi:poi-ooxml:3.17'
//    // Excel XLSX DOCX
//    implementation 'org.apache.poi:poi-scratchpad:3.17'
//    // Word DOC
//    implementation 'org.apache.poi:poi-ooxml-schemas:3.17'
//    implementation files('libs/xdocreport-2.0.1.jar')
//    implementation files('libs/rt.jar')
    //项目要使用iText
    implementation 'com.itextpdf:itextpdf:5.5.13.1'
    implementation 'com.itextpdf.tool:xmlworker:5.5.11'
    implementation 'org.apache.xmlbeans:xmlbeans:3.1.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    //输出中文，还要引入下面itext-asian.jar包
    implementation 'com.itextpdf:itext-asian:5.2.0'
    implementation 'org.jsoup:jsoup:1.11.3'
    //-------------office-------------------


}


def getVersionCode(String version) {
    def versionSplite = version.split("\\.")
    println(versionSplite.toString())
    versionSplite[0].toInteger() * 100000 + versionSplite[1].toInteger() * 1000 + versionSplite[2].toInteger()
}

def getVersionName(String version) {
    String today = new Date().format("yyMMdd")
    version + "_$today"
}